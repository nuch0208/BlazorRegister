@page "/registration"
@using System.Text.Json
@using System.Text
@using System.Net
@inject HttpClient _http
@inject NavigationManager _navigationManager

<div class="ma-6 d-flex justify-center">
    <MudChip T="string" Color="Color.Primary"> 
        <h3>User Registration Form</h3>
    </MudChip>
</div>
<div class="d-flex justify-center">
    <MudCard widt="500px">
        <MudForm Model="registrationModel" @ref="form" Validation="validationModel.ValidateValue" >
            <MudCardContent>
                @if(!string.IsNullOrEmpty(APIErrorMessages))
                {
                    <MudChip T="string" Color="Color.Error">
                        <p>@APIErrorMessages</p>
                    </MudChip>
                }
                <MudTextField @bind-Value="registrationModel.FirstName"                              
                                For="@(() => registrationModel.FirstName)"
                                Immediate="true"
                                Label="First Name" />
                <MudTextField @bind-Value="registrationModel.LastName"                              
                                For="@(() => registrationModel.LastName)"
                                Immediate="true"
                                Label="Last Name" />

                <MudTextField @bind-Value="registrationModel.Email"
                            For="@(() => registrationModel.Email)"
                            Immediate="true"
                            Label="Email" />

                <MudTextField @bind-Value="registrationModel.Password"
                            For="@(() => registrationModel.Password)"
                            Immediate="true"
                            Label="Password" InputType="InputType.Password" />

                <MudTextField @bind-Value="registrationModel.ConfirmPassword"
                            For="@(() => registrationModel.ConfirmPassword)"
                            Immediate="true"
                            Label="ConfirmPassword" InputType="InputType.Password" />
            </MudCardContent>
        </MudForm>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="RegisterAsync" >Registration</MudButton>
        </MudCardActions>
    </MudCard>
</div>


@code {
    RegistrationVM registrationModel = new RegistrationVM();

    RegistrationValidationVM validationModel = new RegistrationValidationVM();

    MudForm form;

    string APIErrorMessages;

    private async Task RegisterAsync()
    {
        await form.Validate();
        if(form.IsValid)
        {
            //registration API call
            var jsonPayload = JsonSerializer.Serialize(registrationModel);
            var requestContent = new StringContent(jsonPayload, Encoding.UTF8, "application/json");

            var response = await _http.PostAsync("/api/User/register", requestContent);

            if(response.StatusCode == HttpStatusCode.BadRequest)
            {
                var errors = await response.Content.ReadFromJsonAsync<Dictionary<string, List<string>>>();
                if(errors.Count > 0)
                {
                    foreach (var item in errors)
                    {
                        foreach (var errorMessage in item.Value)
                        {
                            APIErrorMessages = $"{APIErrorMessages} | {errorMessage}";
                        }
                    }
                }
            }
            else if(response.StatusCode == HttpStatusCode.OK)
            {
                _navigationManager.NavigateTo("/registration-confirmation");
            }
            else
            {
                APIErrorMessages = "Failed to register the user, please try after some time";
            }
        }
    } 
}    
